version: '3'
services:
  db:
    volumes:
      - mysqldata:/var/lib/mysql
    image: mysql:8.0
    container_name: bf-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    command: --authentication-policy=caching_sha2_password --innodb-use-native-aio=0 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - ${MYSQL_EXTERNAL_PORT}:${MYSQL_INTERNAL_PORT}
  app:
    build:
      context: ./
      dockerfile: containers/app/Dockerfile
    container_name: bf-app
    volumes:
      - ./src/static:/apps/BonnyFlowers/static
      - media_container:/apps/BonnyFlowers/media
      - ./src:/apps/BonnyFlowers
    environment:
      - file: .env
    ports:
      - 80:80
    command: sh -c "sleep 7s && \
                    service mysql start && \
                    service mysql status && \
                    mkdir -p /apps/BonnyFlowers/zoho_token/logger && touch /apps/BonnyFlowers/zoho_token/logger/log.log && \
                    poetry env use python3 && \
                    poetry install --no-root  --no-interaction --no-ansi && \
                    poetry run python3 manage.py collectstatic --noinput --no-color && \
                    poetry run python3 manage.py makemigrations --noinput catalogue custom_auth mainpage products userprofile zoho_token && \
                    poetry run python3 manage.py migrate && \
                    poetry run python3 create_init_records.py && \
                    poetry run python3 manage.py runserver 0.0.0.0:80"
#  nginx:
#    image: nginx
#    container_name: bf-nginx-kg
#    depends_on:
#      - app
#    ports:
#      - "80:80"
#    volumes:
#      - ./src/static:/var/www/html/static
#      - media_container:/var/www/html/media
#      - ./nginx-conf.d:/etc/nginx/conf.d
volumes:
  media_container:
  mysqldata:
